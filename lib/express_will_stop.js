// Generated by CoffeeScript 1.6.2
(function() {
  var debug;

  debug = require("debug")("middleware:express_will_stop");

  module.exports = function(options) {
    var exitWhenDone, reqs, shouldStop;

    exitWhenDone = options.exitWhenDone || false;
    shouldStop = false;
    reqs = 0;
    process.on("SIGTERM", function() {
      debug("SIGTERM, should stop");
      shouldStop = true;
      if (reqs === 0 && exitWhenDone) {
        debug("voluntary exit, no active requests");
        return process.exit(0);
      }
    });
    return function(req, res, next) {
      var end;

      if (shouldStop) {
        debug("new request, refusing");
        return res.send(503);
      } else {
        reqs++;
        debug("#requests = " + reqs);
        end = res.end;
        res.end = function(chunk, encoding) {
          res.end = end;
          res.end(chunk, encoding);
          reqs--;
          debug("#requests = " + reqs);
          if (req === 0) {
            debug("active requests == 0, can stop safely");
            if (exitWhenDone) {
              debug("voluntary exit");
              return process.exit(0);
            }
          }
        };
        return next();
      }
    };
  };

}).call(this);
